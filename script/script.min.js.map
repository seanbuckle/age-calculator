{
  "version": 3,
  "sources": ["script.ts"],
  "sourcesContent": ["globalThis.onload = () => {\n    const form = document.getElementById(\"form\") as HTMLFormElement;\n    const day = document.getElementById(\"day\") as HTMLInputElement;\n    const month = document.getElementById(\"month\") as HTMLInputElement;\n    const year = document.getElementById(\"year\") as HTMLInputElement;\n    const dayError = document.getElementById(\"day-error\") as HTMLLabelElement;\n    const monthError = document.getElementById(\n        \"month-error\"\n    ) as HTMLLabelElement;\n    const yearError = document.getElementById(\"year-error\") as HTMLLabelElement;\n    const dayLabel = document.getElementById(\"day-label\") as HTMLLabelElement;\n    const monthLabel = document.getElementById(\n        \"month-label\"\n    ) as HTMLLabelElement;\n    const yearLabel = document.getElementById(\"year-label\") as HTMLLabelElement;\n    const dayNum = document.getElementById(\"day-num\") as HTMLElement;\n    const monthNum = document.getElementById(\"month-num\") as HTMLElement;\n    const yearNum = document.getElementById(\"year-num\") as HTMLElement;\n    const dayText = document.getElementById(\"day-txt\") as HTMLElement;\n    const monthText = document.getElementById(\"month-txt\") as HTMLElement;\n    const yearText = document.getElementById(\"year-txt\") as HTMLElement;\n    const currentDate: Date = new Date();\n    const currentDay: number = currentDate.getDate();\n    const currentMonth: number = currentDate.getMonth() + 1;\n    const currentYear: number = currentDate.getFullYear();\n    const monthsLen: number[] = [\n        31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n    ];\n    const numsRegex: RegExp = /^[0-9]*$/;\n\n    function days(): void {\n        if (day.value === \"\") {\n            dayLabel.classList.add(\"ac-card__input-label--error\");\n            day.classList.add(\"ac-card__date-input--error\");\n            dayError.textContent = \"This field is required\";\n        } else {\n            if (day.value.match(numsRegex) === null) {\n                dayLabel.classList.add(\"ac-card__input-label--error\");\n                day.classList.add(\"ac-card__date-input--error\");\n                dayError.textContent = \"Must be a valid day\";\n            } else {\n                if (Number(day.value) < 1 || Number(day.value) > 31) {\n                    dayLabel.classList.add(\"ac-card__input-label--error\");\n                    day.classList.add(\"ac-card__date-input--error\");\n                    dayError.textContent = \"Must be a valid day\";\n                } else {\n                    dayLabel.classList.remove(\"ac-card__input-label--error\");\n                    day.classList.remove(\"ac-card__date-input--error\");\n                    dayError.textContent = \"\";\n                }\n            }\n        }\n    }\n\n    function months(): void {\n        if (month.value === \"\") {\n            monthLabel.classList.add(\"ac-card__input-label--error\");\n            month.classList.add(\"ac-card__date-input--error\");\n            monthError.textContent = \"This field is required\";\n        } else {\n            if (month.value.match(numsRegex) === null) {\n                monthLabel.classList.add(\"ac-card__input-label--error\");\n                month.classList.add(\"ac-card__date-input--error\");\n                monthError.textContent = \"Must be a valid month\";\n            } else {\n                if (Number(month.value) < 1 || Number(month.value) > 12) {\n                    monthLabel.classList.add(\"ac-card__input-label--error\");\n                    month.classList.add(\"ac-card__date-input--error\");\n                    monthError.textContent = \"Must be a valid month\";\n                } else {\n                    monthLabel.classList.remove(\"ac-card__input-label--error\");\n                    month.classList.remove(\"ac-card__date-input--error\");\n                    monthError.textContent = \"\";\n                }\n            }\n        }\n    }\n\n    function years(): void {\n        if (year.value === \"\") {\n            yearLabel.classList.add(\"ac-card__input-label--error\");\n            year.classList.add(\"ac-card__date-input--error\");\n            yearError.textContent = \"This field is required\";\n        } else {\n            if (year.value.match(numsRegex) === null) {\n                yearLabel.classList.add(\"ac-card__input-label--error\");\n                year.classList.add(\"ac-card__date-input--error\");\n                yearError.textContent = \"Must be a valid year\";\n            } else {\n                if (Number(year.value) < 1) {\n                    yearLabel.classList.add(\"ac-card__input-label--error\");\n                    year.classList.add(\"ac-card__date-input--error\");\n                    yearError.textContent = \"Must be a valid year\";\n                } else {\n                    if (Number(year.value) > currentYear) {\n                        yearLabel.classList.add(\"ac-card__input-label--error\");\n                        year.classList.add(\"ac-card__date-input--error\");\n                        yearError.textContent = \"Must be in the past\";\n                    } else {\n                        yearLabel.classList.remove(\n                            \"ac-card__input-label--error\"\n                        );\n                        year.classList.remove(\"ac-card__date-input--error\");\n                        yearError.textContent = \"\";\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Validates the day, month, and year inputs and displays error messages if the inputs are invalid.\n     * If the inputs are valid, it calls the `age` function.\n     */\n    function validate(): void {\n        let dayValid: boolean = false;\n        let monthValid: boolean = false;\n        let yearValid: boolean = false;\n        let leapYear: boolean = false;\n        let dateValid: boolean = false;\n        if (day.value === \"\") {\n            dayValid = false;\n            dayLabel.classList.add(\"ac-card__input-label--error\");\n            day.classList.add(\"ac-card__date-input--error\");\n            dayError.textContent = \"This field is required\";\n        } else {\n            if (day.value.match(numsRegex) === null) {\n                dayValid = false;\n                dayLabel.classList.add(\"ac-card__input-label--error\");\n                day.classList.add(\"ac-card__date-input--error\");\n                dayError.textContent = \"Must be a valid day\";\n            } else {\n                if (Number(day.value) < 1 || Number(day.value) > 31) {\n                    dayValid = false;\n                    dayLabel.classList.add(\"ac-card__input-label--error\");\n                    day.classList.add(\"ac-card__date-input--error\");\n                    dayError.textContent = \"Must be a valid day\";\n                } else {\n                    dayValid = true;\n                    dayLabel.classList.remove(\"ac-card__input-label--error\");\n                    day.classList.remove(\"ac-card__date-input--error\");\n                    dayError.textContent = \"\";\n                }\n            }\n        }\n        if (month.value === \"\") {\n            monthValid = false;\n            monthLabel.classList.add(\"ac-card__input-label--error\");\n            month.classList.add(\"ac-card__date-input--error\");\n            monthError.textContent = \"This field is required\";\n        } else {\n            if (month.value.match(numsRegex) === null) {\n                monthValid = false;\n                monthLabel.classList.add(\"ac-card__input-label--error\");\n                month.classList.add(\"ac-card__date-input--error\");\n                monthError.textContent = \"Must be a valid month\";\n            } else {\n                if (Number(month.value) < 1 || Number(month.value) > 12) {\n                    monthValid = false;\n                    monthLabel.classList.add(\"ac-card__input-label--error\");\n                    month.classList.add(\"ac-card__date-input--error\");\n                    monthError.textContent = \"Must be a valid month\";\n                } else {\n                    monthValid = true;\n                    monthLabel.classList.remove(\"ac-card__input-label--error\");\n                    month.classList.remove(\"ac-card__date-input--error\");\n                    monthError.textContent = \"\";\n                }\n            }\n        }\n        if (year.value === \"\") {\n            yearValid = false;\n            yearLabel.classList.add(\"ac-card__input-label--error\");\n            year.classList.add(\"ac-card__date-input--error\");\n            yearError.textContent = \"This field is required\";\n        } else {\n            if (\n                year.value.match(numsRegex) === null ||\n                year.value !== year.value.match(numsRegex)?.[0]\n            ) {\n                yearValid = false;\n                yearLabel.classList.add(\"ac-card__input-label--error\");\n                year.classList.add(\"ac-card__date-input--error\");\n                yearError.textContent = \"Must be a valid year\";\n            } else {\n                if (Number(year.value) < 1) {\n                    yearValid = false;\n                    yearLabel.classList.add(\"ac-card__input-label--error\");\n                    year.classList.add(\"ac-card__date-input--error\");\n                    yearError.textContent = \"Must be a valid year\";\n                } else if (Number(year.value) > currentYear) {\n                    yearValid = false;\n                    yearLabel.classList.add(\"ac-card__input-label--error\");\n                    year.classList.add(\"ac-card__date-input--error\");\n                    yearError.textContent = \"Must be in the past\";\n                } else {\n                    yearValid = true;\n                    yearLabel.classList.remove(\"ac-card__input-label--error\");\n                    year.classList.remove(\"ac-card__date-input--error\");\n                    yearError.textContent = \"\";\n                }\n            }\n        }\n        if (\n            (Number(day.value) > currentDay &&\n                Number(month.value) >= currentMonth &&\n                Number(year.value) >= currentYear) ||\n            (Number(day.value) <= currentDay &&\n                Number(month.value) > currentMonth &&\n                Number(year.value) === currentYear)\n        ) {\n            dayValid = false;\n            monthValid = false;\n            yearValid = false;\n            dayLabel.classList.add(\"ac-card__input-label--error\");\n            day.classList.add(\"ac-card__date-input--error\");\n            monthLabel.classList.add(\"ac-card__input-label--error\");\n            month.classList.add(\"ac-card__date-input--error\");\n            yearLabel.classList.add(\"ac-card__input-label--error\");\n            year.classList.add(\"ac-card__date-input--error\");\n            dayError.textContent = \"Must be in the past\";\n        }\n        if (dayValid === true && monthValid === true && yearValid === true) {\n            if (Number(year.value) % 4 === 0) {\n                if (Number(year.value) % 100 === 0) {\n                    if (Number(year.value) % 400 === 0) {\n                        leapYear = true;\n                    } else {\n                        leapYear = false;\n                    }\n                } else {\n                    leapYear = true;\n                }\n            } else {\n                leapYear = false;\n            }\n\n            if (leapYear) {\n                monthsLen[1] = 29;\n            } else {\n                monthsLen[1] = 28;\n            }\n            if (Number(day.value) > monthsLen[Number(month.value) - 1]) {\n                dateValid = false;\n                dayError.textContent = \"Must be a valid date\";\n                dayLabel.classList.add(\"ac-card__input-label--error\");\n                day.classList.add(\"ac-card__date-input--error\");\n                monthLabel.classList.add(\"ac-card__input-label--error\");\n                month.classList.add(\"ac-card__date-input--error\");\n                yearLabel.classList.add(\"ac-card__input-label--error\");\n                year.classList.add(\"ac-card__date-input--error\");\n            } else {\n                dateValid = true;\n                dayError.textContent = \"\";\n                dayLabel.classList.remove(\"ac-card__input-label--error\");\n                day.classList.remove(\"ac-card__date-input--error\");\n                monthLabel.classList.remove(\"ac-card__input-label--error\");\n                month.classList.remove(\"ac-card__date-input--error\");\n                yearLabel.classList.remove(\"ac-card__input-label--error\");\n                year.classList.remove(\"ac-card__date-input--error\");\n            }\n        }\n        if (dateValid === true) {\n            age();\n        }\n    }\n\n    function age(): void {\n        let dayValue: number;\n        let monthValue: number;\n        let yearValue: number = currentYear - Number(year.value);\n        const interval: number = 100;\n        if (currentMonth < Number(month.value)) {\n            yearValue--;\n            monthValue = 12 - Number(month.value) + currentMonth;\n        } else {\n            monthValue = currentMonth - Number(month.value);\n        }\n        if (currentDay < Number(day.value)) {\n            monthValue--;\n            dayValue =\n                monthsLen[currentMonth - 2] - Number(day.value) + currentDay;\n        } else {\n            dayValue = currentDay - Number(day.value);\n        }\n        if (dayValue === 1) {\n            dayText.textContent = \"day\";\n        } else {\n            dayText.textContent = \"days\";\n        }\n        if (monthValue === 1) {\n            monthText.textContent = \"month\";\n        } else {\n            monthText.textContent = \"months\";\n        }\n        if (yearValue === 1) {\n            yearText.textContent = \"year\";\n        } else {\n            yearText.textContent = \"years\";\n        }\n\n        for (let d = 0; d <= dayValue; d++) {\n            days(d);\n        }\n\n        function days(day: number): void {\n            setTimeout(() => {\n                dayNum.textContent = day.toString();\n            }, interval * day);\n        }\n        for (let m = 0; m <= monthValue; m++) {\n            months(m);\n        }\n        function months(month: number): void {\n            setTimeout(() => {\n                monthNum.textContent = month.toString();\n            }, interval * month);\n        }\n        for (let y = 0; y <= yearValue; y++) {\n            years(y);\n        }\n        function years(year: number): void {\n            setTimeout(() => {\n                yearNum.textContent = year.toString();\n            }, interval * year);\n        }\n    }\n\n    day.addEventListener(\"input\", days);\n    month.addEventListener(\"input\", months);\n    year.addEventListener(\"input\", years);\n    form.addEventListener(\"submit\", (e: Event) => {\n        e.preventDefault();\n        validate();\n    });\n\n    const root = document.documentElement as HTMLElement;\n    /**\n     * Button element used to toggle the theme.\n     */\n    const themeToggle = document.getElementById(\n        \"theme-toggle\"\n    ) as HTMLButtonElement;\n    /**\n     * SVG icon representing the dark mode.\n     */\n    const darkModeIcon: string = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1.5rem\" viewBox=\"0 -960 960 960\" width=\"1.5rem\"><path d=\"M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Zm0-80q88 0 158-48.5T740-375q-20 5-40 8t-40 3q-123 0-209.5-86.5T364-660q0-20 3-40t8-40q-78 32-126.5 102T200-480q0 116 82 198t198 82Zm-10-270Z\"/></svg>`;\n    /**\n     * SVG icon representing the light mode.\n     */\n    const lightModeIcon: string = `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1.5rem\" viewBox=\"0 -960 960 960\" width=\"1.5rem\"><path d=\"M480-360q50 0 85-35t35-85q0-50-35-85t-85-35q-50 0-85 35t-35 85q0 50 35 85t85 35Zm0 80q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Zm326-268Z\"/></svg>`;\n    let local = localStorage.getItem(\"theme\");\n    let label = localStorage.getItem(\"theme-label\");\n\n    const isDark: MediaQueryList = globalThis.matchMedia(\n        \"(prefers-color-scheme: dark)\"\n    );\n\n    const lightTooltip: string = \"Switch to dark theme\";\n    const darkTooltip: string = \"Switch to light theme\";\n    function updateTheme() {\n        if (local === \"dark\") {\n            root.setAttribute(\"theme\", \"dark\");\n            themeToggle.innerHTML = lightModeIcon;\n            themeToggle.setAttribute(\"tooltip\", darkTooltip);\n            themeToggle.setAttribute(\"aria-label\", darkTooltip);\n        } else {\n            themeToggle.innerHTML = darkModeIcon;\n            root.setAttribute(\"theme\", local ?? \"\");\n            themeToggle.setAttribute(\"tooltip\", lightTooltip);\n            themeToggle.setAttribute(\"aria-label\", lightTooltip);\n        }\n        themeToggle.setAttribute(\"aria-label\", label ?? \"\");\n    }\n\n    if (local === null) {\n        if (isDark.matches) {\n            themeToggle.innerHTML = lightModeIcon;\n            themeToggle.setAttribute(\"aria-label\", darkTooltip);\n            themeToggle.setAttribute(\"tooltip\", darkTooltip);\n        } else {\n            themeToggle.innerHTML = darkModeIcon;\n            themeToggle.setAttribute(\"aria-label\", lightTooltip);\n            themeToggle.setAttribute(\"tooltip\", lightTooltip);\n        }\n        isDark.addEventListener(\"change\", () => {\n            if (isDark.matches) {\n                themeToggle.innerHTML = lightModeIcon;\n                themeToggle.setAttribute(\"aria-label\", darkTooltip);\n                themeToggle.setAttribute(\"tooltip\", darkTooltip);\n            } else {\n                themeToggle.innerHTML = darkModeIcon;\n                themeToggle.setAttribute(\"aria-label\", lightTooltip);\n                themeToggle.setAttribute(\"tooltip\", lightTooltip);\n            }\n        });\n    } else {\n        updateTheme();\n    }\n\n    function toggleTheme() {\n        if (local === null) {\n            if (isDark.matches) {\n                local = \"light\";\n                label = lightTooltip;\n            } else {\n                local = \"dark\";\n                label = darkTooltip;\n            }\n        } else {\n            if (local === \"dark\") {\n                local = \"light\";\n                label = darkTooltip;\n            } else {\n                local = \"dark\";\n                label = lightTooltip;\n            }\n        }\n        localStorage.setItem(\"theme\", local);\n        localStorage.setItem(\"theme-label\", label ?? \"\");\n        root.setAttribute(\"theme\", local);\n        themeToggle.innerHTML = local === \"dark\" ? lightModeIcon : darkModeIcon;\n        themeToggle.setAttribute(\"aria-label\", label ?? \"\");\n        themeToggle.setAttribute(\n            \"tooltip\",\n            local === \"dark\" ? darkTooltip : lightTooltip\n        );\n    }\n\n    themeToggle.addEventListener(\"click\", toggleTheme);\n};\n"],
  "mappings": "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",
  "names": ["form", "day", "month", "year", "dayError", "monthError", "yearError", "dayLabel", "monthLabel", "yearLabel", "dayNum", "monthNum", "yearNum", "dayText", "monthText", "yearText", "currentDate", "currentDay", "currentMonth", "currentYear", "monthsLen", "numsRegex", "days", "months", "years", "validate", "dayValid", "monthValid", "yearValid", "leapYear", "dateValid", "age", "dayValue", "monthValue", "yearValue", "interval", "d", "m", "y", "e", "root", "themeToggle", "darkModeIcon", "lightModeIcon", "local", "label", "isDark", "lightTooltip", "darkTooltip", "updateTheme", "toggleTheme"]
}
